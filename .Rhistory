setwd(blogdown_source)
blogdown:::new_post_addin()
build_site()
library("blogdown")
install_hugo()
build_site()
setwd()
setwd("`/dropbox/github/blogdown_source")
setwd("~/dropbox/github/blogdown_source")
build_site()
setwd("~/dropbox/github/drrdunn.github.io/")
new_post()
blogdown:::new_post_addin()
library("blogdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("blogdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("tidyverse", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("magrittr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("tidyverse")
mtcars %>%
ggplot(aes(x = wt, y = mpg, colour = cyl)) +
geom_point() +
labs(x = "weight", y = "mpg")
build_site()
setwd("~/dropbox/Github/bloggingdown/")
build_site()
install_hugo()
build_site()
build_site()
build_site()
build_site()
serve_site()
ga_auth(new_user = TRUE)
library("googleAuthR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("googleAnalyticsR", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("googleVis", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
ga_auth(new_user = TRUE)
ga_auth(new_user = TRUE)
ga_data <- google_analytics(viewId = 91606028,
date_range = c(start_date, end_date),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
ga_auth(new_user = TRUE)
ga_auth(new_user = TRUE)
ga_auth(new_user = TRUE)
ga_data <- google_analytics(viewId = 91606028,
date_range = c("2016-1-12", "2018-01-01"),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")
my_data <- readRDS("ga_data.rds")
head(my_data)
device <- ggplot(ga_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
+     geom_line() +
+     theme_light()
ga_data <- google_analytics(viewId = 91606028,
date_range = c("2016-1-12", "2018-01-01"),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")
my_data <- readRDS("ga_data.rds")
head(my_data)
device <- ggplot(ga_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
+     geom_point() +
+     theme_light()
ga_data <- google_analytics(viewId = 91606028,
date_range = c("2016-1-12", "2018-01-01"),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")
my_data <- readRDS("ga_data.rds")
head(my_data)
device <- ggplot(ga_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
+     geom_point() +
+     theme_light()
ga_data <- google_analytics(viewId = 91606028,
date_range = c("2016-1-12", "2018-01-01"),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")
my_data <- readRDS("ga_data.rds")
head(my_data)
device <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
+     geom_point() +
+     theme_light()
ga_data <- google_analytics(viewId = 91606028,
date_range = c("2016-1-12", "2018-01-01"),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")
my_data <- readRDS("ga_data.rds")
head(my_data)
device <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory))
+     geom_line()
device <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) + geom_line()
+     theme_light()
ga_data <- google_analytics(viewId = 91606028,
date_range = c("2016-1-12", "2018-01-01"),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")
my_data <- readRDS("ga_data.rds")
head(my_data)
device <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) + geom_line()
+     theme_light()
ga_data <- google_analytics(viewId = 91606028,
date_range = c("2016-1-12", "2018-01-01"),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")
my_data <- readRDS("ga_data.rds")
head(my_data)
device <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) + geom_line()
device
build_site()
ga_data <- google_analytics(viewId = 91606028,
date_range = c("2016-1-12", "2018-01-01"),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")
my_data <- readRDS("ga_data.rds")
head(my_data)
device <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) + geom_line()
device
mtcars %>%
ggplot(aes(x = wt, y = mpg, colour = cyl)) +
geom_point() +
labs(x = "weight", y = "mpg")
library("magrittr")
mtcars %>%
ggplot(aes(x = wt, y = mpg, colour = cyl)) +
geom_point() +
labs(x = "weight", y = "mpg")
mtcars %>%
ggplot(aes(x = wt, y = mpg, colour = cyl)) +
geom_point() +
labs(x = "weight", y = "mpg")
start_date <- "2016-01-01"
end_date <- "2018-01-01"
ga_data <- google_analytics(viewId = 91606028,
date_range = c(start_date, end_date),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
gg <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
geom_line() +
theme_light()
gg
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
knit2html("file")
knit2html("~/Dropbox/Github/bloggingdown/content/post/2019-01-13-automating-web-analytics-using-r.html")
render_html("~/Dropbox/Github/bloggingdown/content/post/2019-01-13-automating-web-analytics-using-r.html")
start_date <- "2016-01-01"
end_date <- "2018-01-01"
ga_data <- google_analytics(viewId = 91606028,
date_range = c(start_date, end_date),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")  #saves data so that we don't call the API everytime
my_data <- readRDS("ga_data.rds") #reads data
gg <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
geom_line() +
theme_light()
gg
knit2html("2019-01-13-automating-web-analytics-using-r.Rmd")
knit2html("~/Dropbox/Github/content/post/2019-01-13-automating-web-analytics-using-r.Rmd")
knit2html("~/Dropbox/Github/content/post/2019-01-13-automating-web-analytics-using-r.html")
intall_hugo()
install_hugo()
start_date <- "2016-01-01"
end_date <- "2018-01-01"
ga_data <- google_analytics(viewId = 91606028,
date_range = c(start_date, end_date),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")  #saves data so that we don't call the API everytime
my_data <- readRDS("ga_data.rds") #reads data
gg <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
geom_point() +
theme_light()
gg
start_date <- "2016-01-01"
end_date <- "2018-01-01"
ga_data <- google_analytics(viewId = 91606028,
date_range = c(start_date, end_date),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")  #saves data so that we don't call the API everytime
my_data <- readRDS("ga_data.rds") #reads data
gg <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
geom_line() +
theme_light()
gg
start_date <- "2016-01-01"
end_date <- "2018-01-01"
ga_data <- google_analytics(viewId = 91606028,
date_range = c(start_date, end_date),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")  #saves data so that we don't call the API everytime
my_data <- readRDS("ga_data.rds") #reads data
gg <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
geom_line() +
theme_light()
gg
f2 %>%
group_by(year,month) %>%
summarize(sessions=sum(sessions)) %>%
#print table steps by month by year
print (n=100) %>%
#graph data by month by year
ggplot(aes(x=month, y=sessions, fill=year)) +
geom_bar(position='dodge', stat='identity')
start_date <- "2016-01-01"
end_date <- "2018-01-01"
ga_data <- google_analytics(viewId = 91606028,
date_range = c(start_date, end_date),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")  #saves data so that we don't call the API everytime
my_data <- readRDS("ga_data.rds") #reads data
gg <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
geom_line() +
theme_light()
gg
my_data %>%
group_by(year,month) %>%
summarize(sessions=sum(sessions)) %>%
#print table steps by month by year
print (n=100) %>%
#graph data by month by year
ggplot(aes(x=month, y=sessions, fill=year)) +
geom_bar(position='dodge', stat='identity')
start_date <- "2016-01-01"
end_date <- "2018-01-01"
ga_data <- google_analytics(viewId = 91606028,
date_range = c(start_date, end_date),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")  #saves data so that we don't call the API everytime
my_data <- readRDS("ga_data.rds") #reads data
gg <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
geom_line() +
theme_light()
gg
my_data %>%
group_by(year,month) %>%
summarize(sessions=sum(sessions))
start_date <- "2016-01-01"
end_date <- "2018-01-01"
ga_data <- google_analytics(viewId = 91606028,
date_range = c(start_date, end_date),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")  #saves data so that we don't call the API everytime
my_data <- readRDS("ga_data.rds") #reads data
gg <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
geom_line() +
theme_light()
gg
my_data %>%
group_by(year,month) %>%
start_date <- "2016-01-01"
end_date <- "2018-01-01"
ga_data <- google_analytics(viewId = 91606028,
date_range = c(start_date, end_date),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")  #saves data so that we don't call the API everytime
my_data <- readRDS("ga_data.rds") #reads data
gg <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
geom_line() +
theme_light()
gg
my_data %>%
group_by(year,month)
start_date <- "2016-01-01"
end_date <- "2018-01-01"
ga_data <- google_analytics(viewId = 91606028,
date_range = c(start_date, end_date),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")  #saves data so that we don't call the API everytime
my_data <- readRDS("ga_data.rds") #reads data
gg <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
geom_line() +
theme_light()
gg
my_data %>%
group_by(year,month) %>%
head(my_data)
start_date <- "2016-01-01"
end_date <- "2018-01-01"
ga_data <- google_analytics(viewId = 91606028,
date_range = c(start_date, end_date),
metrics = "sessions",
dimensions = c("date","deviceCategory"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")  #saves data so that we don't call the API everytime
my_data <- readRDS("ga_data.rds") #reads data
gg <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
geom_line() +
theme_light()
gg
start_date <- "2016-01-01"
end_date <- "2018-01-01"
ga_data <- google_analytics(viewId = 91606028,
date_range = c(start_date, end_date),
metrics = "sessions",
dimensions = c("date","deviceCategory", "medium"),
anti_sample = TRUE)
saveRDS(ga_data, "ga_data.rds")  #saves data so that we don't call the API everytime
my_data <- readRDS("ga_data.rds") #reads data
gg <- ggplot(my_data, mapping = aes(x = date, y = sessions, colour = deviceCategory)) +
geom_line() +
theme_light()
gg
bb <- ggplot(my_data, mapping = aes(x = medium, y = sessions)) +
geom_bar(stat = "identity") +
coord_flip() +
theme_light() +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank())
bb
build_site()
